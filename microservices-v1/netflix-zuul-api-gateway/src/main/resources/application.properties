spring.application.name=netflix-zuul-api-gateway
server.port: 8765
# Con esta propiedad indicamos a este microservicio la url o path donde en encuentra el servidor Eureka de Netflix para su registro
# Se puede omitir si tanto los microservicios que se van a registrar como el servidor se encuentran en la misma máquina y el servidor se ejecuta en el puerto por defecto 8761,pero normalmente siempre es mejor indicar esta propiedad
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

# Estando el Api Gateway registrado en el servidor de descubrimiento Eureka, por defecto y sin indicar aquí ninguna propiedad de configuración especial,
# podemos enrutar peticiones http a rutas de nuestros microservicios a através de este Api Gateway de la siguiente manera:
# "http://localhost:{server.port}/{application-name}/{uri}", donde "server.port" es el puerto donde se ejecuta este Api Gateway, "application-name" es el valor de la propiedad "spring.application.name" del microservicio y "uri" es la uri o ruta de ese microservicio
# Por ejemplo: "http://localhost:8765/currency-exchange-service/currency-exchange/from/USD/to/INR" enruta la petición http get a la uri o ruta "/currency-exchange/from/USD/to/INR" del microservicio "currency-exchange-service"
# Por ejemplo: "http://localhost:8765/currency-conversion-service/currency-converter-feign/from/USD/to/INR/quantity/1000" enruta la petición http get a la uri o ruta "/currency-converter-feign/from/USD/to/INR/quantity/1000" del microservicio "currency-conversion-service"

# Propiedad para establecer la cantidad(0.1 - 10%, 1.0 - 100%) de trazas que Sleuth debe enviar al servidor Zipkin
# Se comenta porque ahora se configura programáticamente mediante un bean de Spring
#spring.sleuth.sampler.probability=1.0

# Esta propiedad es opcional y sirve para indicar la ruta o path donde se encuentra el servidor Zipkin
# Si no se establece, por defecto busca al servidor en la ruta "http://localhost:9411/"
#spring.zipkin.baseUrl=http://localhost:9411/
# Indicamos que use el broker de mensajería RabbitMQ en lugar del protocolo HTTP(valor por defecto)
spring.zipkin.sender.type=rabbit