spring.application.name=limit-service
# En este caso, con "optional" indicamos que la conexión con el servidor de configuraciones es opcional
# Es decir, si el servidor de configuraciones está levantado, este microservicio se conecta a él, pero si no lo está, no se conecta a él ejecutándose correctamente sin conflictos  
# (A partir de la versión 2.4.x de Spring Boot)Usando esta propiedad para importar datos del servidor de configuraciones, ya no es necesario crear el archivo bootstrap(properties o yaml)
# En este caso, como no se indica el host del servidor de configuraciones, por defecto intenta conectarse al host "http://localhost:8888"
spring.config.import=optional:configserver:
# Si el servidor de configuraciones se encuentra en otro host distinto a "http://localhost:8888", se debe indicar de esta manera
#spring.config.import=optional:configserver:http://localhost:8888
spring.profiles.active=qa
# Por defecto solicita al servidor de configuraciones los archivos de configuraciones que tengan el nombre establecido en la propiedad "spring.application.name"
# Si se desea solicitar archivos de configuraciones que tienen nombres distintos al nombre establecido en la propiedad "spring.application.name", se debe indicar en la siguiente propiedad comentada
#spring.cloud.config.name=

management.endpoints.web.exposure.include=refresh,busrefresh

# Propiedades personalizadas
limit-service.minimum: 3
limit-service.maximum: 997