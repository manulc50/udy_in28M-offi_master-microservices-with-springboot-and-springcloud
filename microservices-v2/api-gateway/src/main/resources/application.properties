spring.application.name: api-gateway
server.port: 8765
# Con esta propiedad indicamos a este microservicio la url o path donde en encuentra el servidor Eureka de Netflix para su registro
# Se puede omitir si tanto los microservicios que se van a registrar como el servidor se encuentran en la misma máquina y el servidor se ejecuta en el puerto por defecto 8761,pero normalmente siempre es mejor indicar esta propiedad
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

# Para usar esta propiedad, es necesario tener la dependencia "spring-cloud-starter-netflix-eureka-client". Su valor por defecto es false
# Habilitando está propiedad, el Api Gateway es capaz de localizar a los microservicios registrados en el servidor de descubrimiento Eureka de forma automática
# De esta forma, si uno de esos microservicios está registrado con el nombre "CURRENCY-EXCHANGE" y una de sus rutas es "/currency-exchange/from/USD/to/INR",
# podemos hacer una petición http a esa ruta de ese microservicio de la siguiente forma: "http://localhost:8765/CURRENCY-EXCHANGE/currency-exchange/from/USD/to/INR"
#spring.cloud.gateway.discovery.locator.enabled=true
# Con esta propiedad habilitada junto con la anterior también habilitada, podemos referirnos a los microservicios usando sus nombres en minúscula
# De esta forma, en vez de realizar la petición http a la ruta "http://localhost:8765/CURRENCY-EXCHANGE/currency-exchange/from/USD/to/INR", la realizamos a la ruta "http://localhost:8765/currency-exchange/currency-exchange/from/USD/to/INR"
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true
# Se comentan las 2 propiedades de arriba para que sus valores sean false(valores por defecto) y, de esta forma, podamos usar nuestras rutas personalizadas implementadas en la clase de Configuración "ApiGatewayConfiguration"

# Propiedad para establecer la cantidad(0.1 - 10%, 1.0 - 100%) de trazas que Sleuth debe enviar al servidor Zipkin
# Se comenta porque ahora se configura programáticamente mediante un bean de Spring
#spring.sleuth.sampler.probability=1.0

# Esta propiedad es opcional y sirve para indicar la ruta o path donde se encuentra el servidor Zipkin
# Si no se establece, por defecto busca al servidor en la ruta "http://localhost:9411/"
#spring.zipkin.baseUrl=http://localhost:9411/
# Indicamos que use el broker de mensajería RabbitMQ en lugar del protocolo HTTP(valor por defecto)
spring.zipkin.sender.type=rabbit